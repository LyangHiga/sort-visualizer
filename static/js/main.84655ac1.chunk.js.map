{"version":3,"sources":["arrHelper.js","animations.js","Nav.js","algorithms/bubbleSort.js","algorithms/selectionSort.js","algorithms/insertSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","algorithms/radixSort.js","styles/NavStyles.js","Bar.js","BarContainer.js","SortVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["randomIntFromInterval","min","max","Math","floor","random","sleep","m","Promise","r","setTimeout","changeAllColor","i","color","arrBars","document","getElementsByClassName","j","style","backgroundColor","selectionAnimation","a","bar1","bar2","sortedAnimation","rearrange","arr","length","bar","height","swapAnimation","height1","height2","Nav","props","classes","styles","theme","useTheme","matches","useMediaQuery","breakpoints","down","useState","openDrawer","setOpenDrawer","iOS","process","browser","test","navigator","userAgent","handleClick","sort","setDisable","btnList","name","click","resetArr","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","radixSort","buttons","map","btn","key","className","button","onClick","disabled","disable","drawer","disableBackdropTransition","disableDiscovery","open","onClose","onOpen","disablePadding","divider","disableTypography","drawerItem","drawerIconContainer","disableRipple","position","Navbar","title","variant","array","noSwaps","current","merge","start","mid","end","startRight","value","index","l","partition","p","left","right","getDigit","num","place","abs","pow","mostDigits","nums","log10","maxDigits","digitBuckets","Array","from","digit","push","concat","makeStyles","display","alignItems","justifyContent","up","marginRight","paddingRight","borderRight","padding","marginLeft","margin","cursor","border","fontSize","textTransform","Bar","val","BarContainer","SortVisualizer","setArr","useEffect","newArr","width","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","console","log","nbars","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84655ac1.chunk.js","sourcesContent":["export const randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const arrAreEquals = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (let i = 0; i < arr2.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n};\n\nexport const testSortingAlgorithms = sortMethod => {\n  // get 100 random arrays\n  for (let i = 0; i < 100; i++) {\n    const array = [];\n    //   random length between 1 and 1000\n    const length = randomIntFromInterval(1, 1000);\n    for (let i = 0; i < length; i++) {\n      array.push(randomIntFromInterval(-1000, 1000));\n    }\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    const sortedArray = sortMethod(array.slice());\n    console.log(arrAreEquals(javaScriptSortedArray, sortedArray));\n  }\n};\n","const sleep = m => new Promise(r => setTimeout(r, m));\n\nexport const changeAllColor = (i, color) => {\n  const arrBars = document.getElementsByClassName('arr-bar');\n  for (let j = 0; j < i; j++) {\n    const bar1 = arrBars[j].style;\n    bar1.backgroundColor = color;\n  }\n};\n\nexport async function selectionAnimation(i, j, color) {\n  //   console.log(`selected: i = ${i} j= ${j}`);\n  //   animate bar[i] and bar[j]\n  const arrBars = document.getElementsByClassName('arr-bar');\n  const bar1 = arrBars[i].style;\n  const bar2 = arrBars[j].style;\n  bar1.backgroundColor = 'red';\n  bar2.backgroundColor = 'red';\n  await sleep(1);\n  bar1.backgroundColor = color;\n  bar2.backgroundColor = color;\n}\n\nexport const sortedAnimation = i => {\n  //   sorted intem in black\n  const arrBars = document.getElementsByClassName('arr-bar');\n  const bar1 = arrBars[i].style;\n  bar1.backgroundColor = 'black';\n};\n\nexport async function rearrange(arr, color) {\n  //   sorted intem in black\n  const arrBars = document.getElementsByClassName('arr-bar');\n  for (let i = 0; i < arr.length; i++) {\n    const bar = arrBars[i].style;\n    await sleep(1);\n    bar.height = `${arr[i]}px`;\n    bar.backgroundColor = color;\n  }\n}\n\nexport const swapAnimation = (i, j) => {\n  const arrBars = document.getElementsByClassName('arr-bar');\n  const bar1 = arrBars[i].style;\n  let height1 = bar1.height;\n  const bar2 = arrBars[j].style;\n  let height2 = bar2.height;\n  bar1.height = `${height2}`;\n  bar2.height = `${height1}`;\n};\n","import React, { Fragment, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport bubbleSort from \"./algorithms/bubbleSort\";\nimport selectionSort from \"./algorithms/selectionSort\";\nimport insertionSort from \"./algorithms/insertSort\";\nimport mergeSort from \"./algorithms/mergeSort\";\nimport quickSort from \"./algorithms/quickSort\";\nimport radixSort from \"./algorithms/radixSort\";\nimport heapSort from \"./algorithms/heapSort\";\nimport { testSortingAlgorithms } from \"./arrHelper\";\nimport styles from \"./styles/NavStyles\";\n\nfunction Nav(props) {\n  const classes = styles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  async function handleClick(sort) {\n    props.setDisable(true);\n    await sort;\n    props.setDisable(false);\n  }\n\n  const btnList = [\n    { name: \"New Bars\", click: () => props.resetArr() },\n    { name: \"Bubble Sort\", click: () => handleClick(bubbleSort(props.arr)) },\n    {\n      name: \"Selection Sort\",\n      click: () => handleClick(selectionSort(props.arr)),\n    },\n    {\n      name: \"Insertion Sort\",\n      click: () => handleClick(insertionSort(props.arr)),\n    },\n    {\n      name: \"Merge Sort\",\n      click: () => handleClick(mergeSort(props.arr, 0, props.arr.length - 1)),\n    },\n    {\n      name: \"Quick Sort\",\n      click: () => handleClick(quickSort(props.arr)),\n    },\n    {\n      name: \"Radix Sort\",\n      click: () => handleClick(radixSort(props.arr)),\n    },\n  ];\n\n  const buttons = (\n    <Fragment>\n      {btnList.map((btn) => (\n        <Button\n          key={`btn-${btn.name}`}\n          className={classes.button}\n          onClick={btn.click}\n          disabled={props.disable}\n        >\n          {btn.name}\n        </Button>\n      ))}\n    </Fragment>\n  );\n  // drawer\n  const drawer = (\n    <Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n      >\n        <List disablePadding>\n          {btnList.map((btn) => (\n            <ListItem\n              key={`list-${btn.name}`}\n              onClick={() => {\n                setOpenDrawer(false);\n                btn.click();\n              }}\n              className={classes.button}\n              divider\n              button\n              disabled={props.disable}\n            >\n              <ListItemText disableTypography className={classes.drawerItem}>\n                {btn.name}\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.drawerIconContainer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcon></MenuIcon>\n      </IconButton>\n    </Fragment>\n  );\n  return (\n    <AppBar position=\"static\" color=\"white\" className={classes.Navbar}>\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\n          Sorting Visualizer\n        </Typography>\n        {matches ? drawer : buttons}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Nav;\n","import {\n  changeAllColor,\n  selectionAnimation,\n  swapAnimation,\n  sortedAnimation\n} from '../animations';\n\n// check consective elements (arr[j],arr[j+1]) , if the arr[j] > arr[j+1] swap!\n// in each iterations we sort from the end\n//   some code is commented becaus of the animation, some changes are needed to use testSortingAlgorithms\nexport default async function bubbleSort(array) {\n  let noSwaps;\n  for (let i = array.length; i > 0; i--) {\n    noSwaps = true;\n    for (let j = 0; j < i - 1; j++) {\n      //   animate bars selected\n      await selectionAnimation(j, j + 1, 'blue');\n      if (array[j] > array[j + 1]) {\n        //   animate swap\n        swapAnimation(j, j + 1);\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\n        noSwaps = false;\n      }\n    }\n    sortedAnimation(i - 1);\n    if (noSwaps) {\n      changeAllColor(i - 1, 'black');\n      break;\n    }\n  }\n  return array;\n}\n","import {\n  selectionAnimation,\n  swapAnimation,\n  sortedAnimation\n} from '../animations';\n\n// seach for the min in each iteration\n// swap min to right position\nexport default async function selectionSort(arr) {\n  let min;\n  for (let i = 0; i < arr.length; i++) {\n    min = i;\n    for (let j = i; j < arr.length; j++) {\n      await selectionAnimation(min, j, 'blue');\n      if (arr[min] > arr[j]) {\n        min = j;\n      }\n    }\n    if (i !== min) {\n      [arr[i], arr[min]] = [arr[min], arr[i]];\n      swapAnimation(i, min);\n    }\n    sortedAnimation(i);\n  }\n  return arr;\n}\n","import {\n  selectionAnimation,\n  swapAnimation,\n  sortedAnimation\n} from '../animations';\n\n// keep the left size sorted and insert intems from the right part in the right posistion\nexport default async function insertionSort(arr) {\n  for (let i = 1; i < arr.length; i++) {\n    let current = arr[i];\n    for (var j = i - 1; j > -1 && current < arr[j]; j--) {\n      await selectionAnimation(i, j, 'black');\n      arr[j + 1] = arr[j];\n      swapAnimation(j, j + 1);\n    }\n    arr[j + 1] = current;\n    sortedAnimation(j + 1);\n  }\n  return arr;\n}\n","import {\n  selectionAnimation,\n  swapAnimation,\n  sortedAnimation,\n  changeAllColor\n} from '../animations';\n\n// REFERENCE\n// https://www.geeksforgeeks.org/in-place-merge-sort/\n\n// in place merge sort\n\n// Merges two subarrays of arr.\n// First subarray is arr[l..m]\n//  Second subarray is arr[m+1..r]\nasync function merge(arr, start, mid, end) {\n  let startRight = mid + 1;\n\n  // If the direct merge is already sorted\n  if (arr[mid] <= arr[startRight]) {\n    return;\n  }\n\n  // Two pointers to maintain start of both arrays to merge\n  while (start <= mid && startRight <= end) {\n    // If element 1 is in right place\n    if (arr[start] <= arr[startRight]) {\n      await selectionAnimation(start, startRight);\n      sortedAnimation(start);\n      start += 1;\n    } else {\n      let value = arr[startRight];\n      let index = startRight;\n\n      //  Shift all the elements between element 1\n      //  element 2, right by 1.\n      while (index !== start) {\n        arr[index] = arr[index - 1];\n        swapAnimation(index, index - 1);\n        sortedAnimation(index);\n        index -= 1;\n      }\n      arr[start] = value;\n      //  Update all the pointers\n      start += 1;\n      mid += 1;\n      startRight += 1;\n    }\n    changeAllColor(startRight, 'black');\n  }\n}\n\n// l is for left index and r is right index of the\n// sub-array of arr to be sorted\nexport default async function mergeSort(arr, l, r) {\n  if (l < r) {\n    // Same as (l + r) / 2, but avoids overflow\n    // for large l and r\n    const m = Math.floor(l + (r - l) / 2);\n\n    // Sort first and second halves\n    await selectionAnimation(l, m, 'blue');\n    await selectionAnimation(m + 1, r, 'blue');\n    await mergeSort(arr, l, m);\n    await mergeSort(arr, m + 1, r);\n\n    await merge(arr, l, m, r);\n  }\n  return arr;\n}\n","import {\n  selectionAnimation,\n  swapAnimation,\n  sortedAnimation\n} from '../animations';\n\n// returns start <= random < end\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n// output: the index of the pivot\nasync function partition(arr, start = 0, end = arr.length) {\n  // lets take the first element as pivot\n  // const p = arr[start];\n  // random pivot\n  const index = random(start, end);\n  const p = arr[index];\n  // swap pivot to the first position\n  [arr[start], arr[index]] = [arr[index], arr[start]];\n  swapAnimation(start, index);\n\n  // keep track of how many elements are smaller than the pivot, to mark its right position\n  let i = start + 1;\n  // elements with idx < j : partitioned\n  // elements with idx > j unpartitioned\n  for (let j = start + 1; j < end; j++) {\n    // check if the next element is smaller than the pivot\n    await selectionAnimation(index, j, 'blue');\n    if (arr[j] < p) {\n      // swap and move i\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n      swapAnimation(i, j);\n      i++;\n    }\n  }\n  // put p in its right position and return this idx\n  [arr[start], arr[i - 1]] = [arr[i - 1], arr[start]];\n  swapAnimation(start, i - 1);\n  sortedAnimation(i - 1);\n  return i - 1;\n}\n\nexport default async function quickSort(arr, left = 0, right = arr.length) {\n  if (right - left < 1) return;\n  // find the right position of a random pivot\n  const p = await partition(arr, left, right);\n  // recurssive through p\n  await quickSort(arr, left, p);\n  await quickSort(arr, p + 1, right);\n  return arr;\n}\n","import { rearrange, selectionAnimation } from '../animations';\n\n// Returns the digit in num at the given place value, only positve numbers\nconst getDigit = (num, place) => {\n  return Math.floor(Math.abs(num) / Math.pow(10, place)) % 10;\n};\n\n// Returns the number of digits in num\nconst digitCount = num => {\n  // log 0\n  if (num === 0) return 1;\n  return Math.floor(Math.log10(num)) + 1;\n};\n\n// returns the number of digits in the largest number of the list nums\nconst mostDigits = nums => {\n  let max = 0;\n  for (let i = 0; i < nums.length; i++) {\n    max = Math.max(max, digitCount(nums[i]));\n  }\n  return max;\n};\n\nexport default async function radixSort(nums) {\n  let maxDigits = mostDigits(nums);\n  // put each digit from each num in the right bucket\n  for (let i = 0; i < maxDigits; i++) {\n    // an array of 10 empty arrays, a bucket to each possible number\n    let digitBuckets = Array.from({ length: 10 }, () => []);\n    for (let j = 0; j < nums.length; j++) {\n      // take the digit of nums[j]\n      let digit = getDigit(nums[j], i);\n      // add this nums[j] in the bucket of the right digit\n      digitBuckets[digit].push(nums[j]);\n      await selectionAnimation(j, j, 'blue');\n    }\n    // to concate each element from each bucket, using spread\n    nums = [].concat(...digitBuckets);\n    if (i < maxDigits - 1) {\n      await rearrange(nums, 'blue');\n    } else {\n      await rearrange(nums, 'black');\n    }\n  }\n  return nums;\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles((theme) => ({\n  Navbar: {\n    display: \"flex\",\n    alignItems: \"space-around\",\n    justifyContent: \"center\",\n    height: \"8vh\",\n  },\n  title: {\n    [theme.breakpoints.up(\"md\")]: {\n      marginRight: \"2.5vw\",\n      paddingRight: \"2.5vw\",\n      borderRight: \"0.10em solid black\",\n      padding: \"0.5em\",\n    },\n  },\n  drawerIconContainer: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  button: {\n    margin: \"0 10px\",\n    cursor: \"pointer\",\n    border: \"none\",\n    fontSize: \"1rem\",\n    textTransform: \"none\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"0.9rem\",\n      margin: \"0 5px\",\n    },\n  },\n}));\n\nexport default styles;\n","import React from 'react';\n\nexport default function Bar(props) {\n  return (\n    <div\n      className=\"arr-bar\"\n      key={props.i}\n      style={{ height: `${props.val}px` }}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport Bar from \"./Bar\";\n\nexport default function BarContainer(props) {\n  return (\n    <div className=\"arr-container\">\n      {props.arr.map((val, i) => (\n        <Bar val={val} i={i} />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { randomIntFromInterval } from \"./arrHelper\";\nimport \"./SortVisualizer.css\";\nimport { changeAllColor } from \"./animations\";\nimport Nav from \"./Nav\";\nimport BarContainer from \"./BarContainer\";\n\nconst MARGIN = 100;\n// bar size + bar margin\nconst BAR_SIZE = 4;\n\nconst MIN_HEIGHT = 5;\n// 8 vh aproximation\nconst NAV_HEIGHT = 200;\n\nexport default function SortVisualizer(props) {\n  const [arr, setArr] = useState([]);\n  const [disable, setDisable] = useState(false);\n\n  useEffect(() => {\n    resetArr();\n    // empty brackets ensure the useEffect run only once\n  }, []);\n\n  const resetArr = () => {\n    const newArr = [];\n    const width =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth;\n    const height =\n      window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight;\n    console.log(height);\n    const nbars = Math.floor((width - 2 * MARGIN) / BAR_SIZE);\n    for (let i = 0; i < nbars; i++) {\n      // 5 and 730 to fit in the screen\n      // duplicated values are allowed\n      newArr.push(randomIntFromInterval(MIN_HEIGHT, height - NAV_HEIGHT));\n    }\n    setArr(newArr);\n    changeAllColor(arr.length, \"blue\");\n  };\n\n  return (\n    <div>\n      <Nav\n        arr={arr}\n        resetArr={resetArr}\n        disable={disable}\n        setDisable={setDisable}\n      />\n      <BarContainer arr={arr} />\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport SortVisualizer from \"./SortVisualizer\";\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Sorting Visualizer\";\n  }, []);\n  return (\n    <div className=\"App\">\n      <SortVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}